<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>vue2和vue3的响应式原理</title>
    <link href="/2022/05/03/vue%E7%9A%84%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86/"/>
    <url>/2022/05/03/vue%E7%9A%84%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>vue2 的响应式原理</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>vue2和vue3的不同</title>
    <link href="/2022/04/21/vue2%E5%92%8Cvue3%E7%9A%84%E4%B8%8D%E5%90%8C/"/>
    <url>/2022/04/21/vue2%E5%92%8Cvue3%E7%9A%84%E4%B8%8D%E5%90%8C/</url>
    
    <content type="html"><![CDATA[<!-- more --><h2 id="1-vue2-和-vue3-的生命周期不同"><a href="#1-vue2-和-vue3-的生命周期不同" class="headerlink" title="1.vue2 和 vue3 的生命周期不同"></a>1.vue2 和 vue3 的生命周期不同</h2><ul><li>vue2 销毁阶段的生命周期是 beforeDestory 和 destoryed</li><li>vue3 销毁阶段的生命周期是 beforeUnmount 和 unmounted</li></ul><h2 id="2-通信方式的不同"><a href="#2-通信方式的不同" class="headerlink" title="2.通信方式的不同"></a>2.通信方式的不同</h2><ul><li>vue3 删除了<code> $on/$off/$once</code> API 所以默认不能使用全局事件总线，如果想要使用全局事件总线，需要使用第三方库 mitt 等</li><li>vue3 删除了 v-bind:xxx.sync 修饰符，父子组件双向通信只能使用 v-model</li><li>v-model 对组件用法不一样<ul><li>vue2 中 v-model 绑定的是 value 属性和 input 自定义事件</li><li>vue3 中 v-model 绑定的是 modelValue 属性和 update:modelVluae 自定义事件</li></ul></li><li>vue3 中删除了 <code>$listeners</code>,整合到了<code>$attrs</code>中</li><li>vue3 中删除了 <code>$children</code>,获取子组件实例对象必须使用 ref<br>注：在 vue2 和 vue3 中使用 ref 也不一样<ul><li>vue2 中定义之后 可以直接使用<code>thsi.$refs</code>来获取到</li><li>vue3 中定义之后 下面使用<code>ref</code>定义一个相同的响应式数据</li></ul></li></ul><h2 id="3-指令的不同"><a href="#3-指令的不同" class="headerlink" title="3.指令的不同"></a>3.指令的不同</h2><ol><li><p>vue2 和 vue3 中<code>v-for</code>和<code>v-if</code>优先级也不同</p><ul><li>vue2 中 v-for 的优先级更高</li><li>vue3 中 v-if 的优先级更高一点</li></ul></li><li><p>vue3 中删除了 <code>v-bind</code> 中的.sync 修饰符</p></li><li><p>vue3 中新增了一个 <code>v-memo</code> 指令 用来缓存 DOM 元素</p></li></ol><h2 id="4-开发模式的不同"><a href="#4-开发模式的不同" class="headerlink" title="4.开发模式的不同"></a>4.开发模式的不同</h2><ul><li>vue2 中只能只用选项式开发模式</li><li>vue3 中不仅能使用选项式开发模式还能使用组合式开发模式</li></ul><h2 id="5-响应式原理不同-详情跳转"><a href="#5-响应式原理不同-详情跳转" class="headerlink" title="5.响应式原理不同(详情跳转)"></a>5.响应式原理不同(<a href="https://dxb176.github.io/2022/05/03/vue%E7%9A%84%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86/">详情跳转</a>)</h2><ul><li><p>vue2 的响应式原理是 Object.defineProperty</p></li><li><p>vue3 的响应式原理是使用代理对象 Proxy</p></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第一个博客</title>
    <link href="/2022/04/21/%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/04/21/%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h3 id="运行命令"><a href="#运行命令" class="headerlink" title="运行命令"></a>运行命令</h3><ul><li>hexo generate 编译</li><li>hexo deploy 提交</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
